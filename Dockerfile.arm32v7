# First build stage: get gemu for multi-arch building
FROM alpine AS qemu

#QEMU Download
# ENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-aarch64.tar.gz
# RUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1
RUN apk add qemu qemu-user-static qemu-user binfmt-support

# New build stage: Basis-Image
FROM arm32v7/python:3.8.2-slim-buster

# Provide QEMU for this stage of docker build
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static

LABEL maintainer="marcel.beining@gmail.com"

RUN apt-get update
RUN apt-get -y install curl build-essential libssl-dev python-dev libffi-dev
RUN apt-get clean
RUN pip install --upgrade pip

# Prepare environment
WORKDIR /eazebot_docker

ENV LD_LIBRARY_PATH /usr/local/lib
ENV IN_DOCKER_CONTAINER Yes

# Install dependencies
COPY requirements.txt /eazebot_docker/
RUN pip install -r /eazebot_docker/requirements.txt --no-cache-dir

# Install and execute
# take the files and folders in local build context and add them to the Docker imageâ€™s current working directory.
COPY . /eazebot_docker/
RUN pip install -e /eazebot_docker --no-cache-dir

ENTRYPOINT ["python", "/eazebot_docker/eazebot/main.py"]

CMD []

